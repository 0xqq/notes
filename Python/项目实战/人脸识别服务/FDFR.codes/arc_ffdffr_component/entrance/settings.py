#! -*- coding: utf-8 -*-


# author: forcemain@163.com


"""
Django settings for entrance project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bur=pqlsm*y9fk8lb5+lfhc*^f=9s8#2!8gwq!4b4_9ls-i5um'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition
CUSTOMIZED_APPS = [
    'entrance',
    'oauth2_app',
    'ffdffr_app',
]

INSTALLED_APPS = CUSTOMIZED_APPS + [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS = INSTALLED_APPS + [
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'entrance.urls'

AUTH_USER_MODEL = 'oauth2_app.User'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'entrance.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

USE_TZ = True

USE_I18N = True

USE_L10N = True

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
_STATIC_BASE = os.path.join(BASE_DIR, 'static')
_STATIC_ROOT = os.path.join(BASE_DIR, 'assets')
STATIC_URL = '/static/'
STATIC_ROOT = _STATIC_ROOT if isinstance(_STATIC_ROOT, unicode) else _STATIC_ROOT.decode('utf-8')
STATIC_BASE = _STATIC_BASE if isinstance(_STATIC_BASE, unicode) else _STATIC_BASE.decode('utf-8')
STATICFILES_DIRS = (_STATIC_BASE,)

# Media files
_MEDIA_ROOT = os.path.join(BASE_DIR, 'medias')
MEDIA_URL = '/medias/'
MEDIA_ROOT = _MEDIA_ROOT if isinstance(_MEDIA_ROOT, unicode) else _MEDIA_ROOT.decode('utf-8')


# Rest framework
REST_FRAMEWORK = {
    'PAGINATE_BY': 15,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    # 'DEFAULT_RENDERER_CLASSES': [
    #     'rest_framework.renderers.JSONRenderer',
    # ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'utils.rest.auth.oauth2.authentications.Oauth2BearerTokenAuthentication',
    ),
    'EXCEPTION_HANDLER': 'utils.rest.exps_handler.drf_exception_handler',
}

# Rest exception
FRIENDLY_ERRORS = {
    'CATCH_ALL_EXCEPTIONS': False,
}

# OAuth2 client
OAUTH2_CLIENT = {
    'OAUTH2_CLIENT_TOKEN_MODEL': 'oauth2_app.models.OAuth2Token',
    'OAUTH2_SERVER_USER_ENDPOINT': 'http://10.246.102.9:8000/oauth/introspect/',
    'OAUTH2_SERVER_BEARER_HEADER_PREFIX': 'Bearer',
    'OAUTH2_CLIENT_TOKEN_MODEL_NAME': 'OAuth2Token',
    'OAUTH2_SERVER_TOKEN_EXPIRED_SECONDS': 24 * 60 * 60
}
